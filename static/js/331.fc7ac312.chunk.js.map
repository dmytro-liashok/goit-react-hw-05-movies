{"version":3,"file":"static/js/331.fc7ac312.chunk.js","mappings":"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","sources":["pages/FindMoviesList.jsx","pages/Movies.jsx","services/api-key.js","services/api-movies.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nexport default function FindMoviesList({\n  findMovies,\n  onClickChangePage,\n  page,\n  totalFindPages,\n}) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {findMovies.map(findMovie => (\n          <li key={findMovie.id}>\n            <NavLink to={`/movies/${findMovie.id}`} state={{ from: location }}>\n              {findMovie.poster_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${findMovie.poster_path}`}\n                  alt={findMovie.original_title}\n                />\n              )}\n              <h3>{findMovie.title}</h3>\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n      <button\n        type=\"button\"\n        disabled={page === totalFindPages}\n        onClick={() => {\n          onClickChangePage(+1);\n        }}\n      >\n        <b>Next Page</b>\n      </button>\n      <button\n        type=\"button\"\n        disabled={page === 1}\n        onClick={() => {\n          onClickChangePage(-1);\n        }}\n      >\n        <b>Past page</b>\n      </button>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { getMovieSearch } from 'services/api-movies';\nimport FindMoviesList from './FindMoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport default function Movies() {\n  const [findMovies, setFindMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalFindPages, setTotalFindPages] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const serchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!serchQuery) {\n      return;\n    }\n    async function fetchSearchMovies() {\n      const response = await getMovieSearch(serchQuery, page);\n      setFindMovies(response.results);\n      setTotalFindPages(response.total_pages);\n    }\n\n    fetchSearchMovies();\n\n    if (page === totalFindPages) {\n      toast.warning('ops');\n      return;\n    }\n  }, [serchQuery, page, totalFindPages]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const value = event.target.search.value;\n    setSearchParams({ query: value });\n  }\n\n  function handleChangePage(value) {\n    setPage(prevPage => prevPage + value);\n  }\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Please input value\"\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      {findMovies?.length > 0 && (\n        <FindMoviesList\n          findMovies={findMovies}\n          onClickChangePage={handleChangePage}\n          page={page}\n          totalFindPages={totalFindPages}\n        />\n      )}\n    </div>\n  );\n}\n","const API_KEY = `47e737aa53e901079b0b9f35c1e0bd68`;\nexport default API_KEY;\n","import API_KEY from './api-key';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    // throw error;\n  }\n}\n\nexport async function getDetailsMovies(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieSearch(movieQuery, page) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movieQuery}&page=${page}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\n// export default async function getMovies({\n//   movieId = '',\n//   searchParameter = '',\n//   searchParameterPrimary = '',\n//   movieQuery = '',\n// }) {\n//   try {\n//     const response = await axios.get(\n//       `https://api.themoviedb.org/3/${searchParameterPrimary}movie${movieId}${searchParameter}?api_key=${API_KEY}${movieQuery}`\n//     );\n//     return response.data;\n//   } catch (error) {\n//     toast.error('Oops! Something went wrong! Please try again!');\n//   }\n// }\n"],"names":["FindMoviesList","findMovies","onClickChangePage","page","totalFindPages","location","useLocation","map","findMovie","to","id","state","from","poster_path","src","alt","original_title","title","type","disabled","onClick","Movies","useState","setFindMovies","setPage","setTotalFindPages","useSearchParams","searchParams","setSearchParams","serchQuery","get","useEffect","getMovieSearch","response","results","total_pages","fetchSearchMovies","toast","onSubmit","event","preventDefault","value","target","search","query","name","placeholder","required","length","prevPage","getTrendingMovies","axios","API_KEY","data","getDetailsMovies","movieId","getMovieCast","getMovieReviews","movieQuery"],"sourceRoot":""}