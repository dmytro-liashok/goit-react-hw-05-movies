{"version":3,"file":"static/js/331.dc528908.chunk.js","mappings":"uQAEe,SAASA,EAAT,GAAyC,IAAfC,EAAc,EAAdA,WACjCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,wBACGF,EAAWG,KAAI,SAAAC,GAAS,OACvB,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAUE,IAAMC,MAAO,CAAEC,KAAMP,GAAvD,SACGG,EAAUK,cACT,gBACEC,IAAG,yCAAoCN,EAAUK,aACjDE,IAAKP,EAAUQ,oBALdR,EAAUE,GADI,OAehC,CClBc,SAASO,IACtB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOd,EAAP,KAAmBe,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAoBpC,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,qGACyBC,EAAAA,EAAAA,GAAeH,GADxC,OACQI,EADR,OAEER,EAAcQ,EAASC,SAFzB,4CAJc,sBACTL,GADS,mCASdM,EACD,GAAE,CAACN,KAGF,4BACE,0BACE,kBAAMO,SArBZ,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOC,OAAOF,MAClCX,EAAgB,CAAEc,MAAOH,GAC1B,EAiBK,WACE,kBACEI,KAAK,OACLC,KAAK,SACLC,YAAY,qBACZC,UAAQ,KAEV,mBAAQH,KAAK,SAAb,0BAGO,OAAVjC,QAAU,IAAVA,OAAA,EAAAA,EAAYqC,QAAS,IAAK,SAACtC,EAAD,CAAgBC,WAAYA,MAG5D,C,qLC3CD,EADa,mC,yBCKN,SAAesC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,kEACsCC,IAH1D,cAEGjB,EAFH,yBAKIA,EAASkB,MALb,gCAOHC,EAAAA,GAAAA,MAAY,iDAPT,gFAYA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,oBACoCJ,IAHxD,cAEGjB,EAFH,yBAKIA,EAASkB,MALb,sCAOHC,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC4CJ,IAHhE,cAEGjB,EAFH,yBAKIA,EAASkB,MALb,sCAOHC,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEoBL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC4CJ,IAHhE,cAEGjB,EAFH,yBAKIA,EAASkB,MALb,sCAOHC,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAepB,EAAtB,kC,aAAO,O,oBAAA,WAA8ByB,GAA9B,gGAEoBR,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDO,IAHrE,cAEGxB,EAFH,yBAKIA,EAASkB,MALb,sCAOHC,EAAAA,GAAAA,MAAY,iDAPT,qF","sources":["pages/FindMoviesList.jsx","pages/Movies.jsx","services/api-key.js","services/api-movies.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nexport default function FindMoviesList({ findMovies }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {findMovies.map(findMovie => (\n          <li key={findMovie.id}>\n            <NavLink to={`/movies/${findMovie.id}`} state={{ from: location }}>\n              {findMovie.poster_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${findMovie.poster_path}`}\n                  alt={findMovie.original_title}\n                />\n              )}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { getMovieSearch } from 'services/api-movies';\nimport FindMoviesList from './FindMoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [findMovies, setFindMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const serchQuery = searchParams.get('query');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const value = event.target.search.value;\n    setSearchParams({ query: value });\n  }\n\n  useEffect(() => {\n    if (!serchQuery) {\n      return;\n    }\n    async function fetchSearchMovies() {\n      const response = await getMovieSearch(serchQuery);\n      setFindMovies(response.results);\n    }\n\n    fetchSearchMovies();\n  }, [serchQuery]);\n\n  return (\n    <div>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Please input value\"\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      {findMovies?.length > 0 && <FindMoviesList findMovies={findMovies} />}\n    </div>\n  );\n}\n","const API_KEY = `47e737aa53e901079b0b9f35c1e0bd68`;\nexport default API_KEY;\n","import API_KEY from './api-key';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    // throw error;\n  }\n}\n\nexport async function getDetailsMovies(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieSearch(movieQuery) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movieQuery}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\n// export default async function getMovies({\n//   movieId = '',\n//   searchParameter = '',\n//   searchParameterPrimary = '',\n//   movieQuery = '',\n// }) {\n//   try {\n//     const response = await axios.get(\n//       `https://api.themoviedb.org/3/${searchParameterPrimary}movie${movieId}${searchParameter}?api_key=${API_KEY}${movieQuery}`\n//     );\n//     return response.data;\n//   } catch (error) {\n//     toast.error('Oops! Something went wrong! Please try again!');\n//   }\n// }\n"],"names":["FindMoviesList","findMovies","location","useLocation","map","findMovie","to","id","state","from","poster_path","src","alt","original_title","Movies","useState","setFindMovies","useSearchParams","searchParams","setSearchParams","serchQuery","get","useEffect","getMovieSearch","response","results","fetchSearchMovies","onSubmit","event","preventDefault","value","target","search","query","type","name","placeholder","required","length","getTrendingMovies","axios","API_KEY","data","toast","getDetailsMovies","movieId","getMovieCast","getMovieReviews","movieQuery"],"sourceRoot":""}