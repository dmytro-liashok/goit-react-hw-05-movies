{"version":3,"file":"static/js/367.e343a303.chunk.js","mappings":"gRAWMA,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACrBC,GAAmBD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAEf,SAASE,IAAiB,IAAD,IACtC,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOD,EAAP,KAAsBE,EAAtB,KACMC,GAAUC,EAAAA,EAAAA,MAAYD,QACtBE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KACpD,GAA4BT,EAAAA,EAAAA,WAAS,GAArC,eAAOU,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAiBX,GAF5C,OAEUY,EAFV,OAGIb,EAAiBa,GAHrB,sDAKIC,EAAAA,GAAAA,MAAY,iDALhB,+DADc,sBAUTL,KAVU,WAAD,wBAWZM,GACAL,GAAU,GAEb,GAAE,CAACD,EAAQR,KAEV,iCACE,SAAC,KAAD,CAASe,GAAIX,EAAaY,QAA1B,sBACA,4CAAoBnB,EAAcoB,SACjCpB,EAAcqB,cACb,gBACEC,IAAG,UAAKtB,EAAcoB,OACtBG,IAAG,yCAAoCvB,EAAcqB,gBAGzD,2BACE,yBACE,SAAC,KAAD,CAASH,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAIJ,SAAC,EAAAM,SAAD,CAAUC,UAAU,qCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAAC9B,EAAD,OAC5B,SAAC,KAAD,CAAO6B,KAAK,UAAUC,SAAS,SAAC5B,EAAD,aAKxC,C,qLC9DD,EADa,mC,yBCKN,SAAe6B,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,kEACsCC,IAH1D,cAEGf,EAFH,yBAKIA,EAASgB,MALb,gCAOHf,EAAAA,GAAAA,MAAY,iDAPT,gFAYA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,gGAEoB0B,EAAAA,EAAAA,IAAA,6CACiB1B,EADjB,oBACoC2B,IAHxD,cAEGf,EAFH,yBAKIA,EAASgB,MALb,sCAOHf,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4B7B,GAA5B,gGAEoB0B,EAAAA,EAAAA,IAAA,6CACiB1B,EADjB,4BAC4C2B,IAHhE,cAEGf,EAFH,yBAKIA,EAASgB,MALb,sCAOHf,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,gGAEoB0B,EAAAA,EAAAA,IAAA,6CACiB1B,EADjB,4BAC4C2B,IAHhE,cAEGf,EAFH,yBAKIA,EAASgB,MALb,sCAOHf,EAAAA,GAAAA,MAAY,iDAPT,qFAYA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,gGAEoBN,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDK,IAHrE,cAEGpB,EAFH,yBAKIA,EAASgB,MALb,sCAOHf,EAAAA,GAAAA,MAAY,iDAPT,qF","sources":["pages/DetailsMovies.jsx","services/api-key.js","services/api-movies.js"],"sourcesContent":["import { useEffect, useRef, useState, Suspense, lazy } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getDetailsMovies } from 'services/api-movies';\nimport { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nconst CastMoviePage = lazy(() => import('./CastMovie'));\nconst ReviewsMoviePage = lazy(() => import('./ReviewsMovie'));\n\nexport default function DetailsMovies() {\n  const [DetailsMovies, setDetailsMovies] = useState([]);\n  const movieId = useParams().movieId;\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchDetailsMovies() {\n      try {\n        const response = await getDetailsMovies(movieId);\n        setDetailsMovies(response);\n      } catch (error) {\n        toast.error('Oops! Something went wrong! Please try again!');\n        throw error;\n      }\n    }\n    if (!loaded) {\n      fetchDetailsMovies();\n      setLoaded(true);\n    }\n  }, [loaded, movieId]);\n  return (\n    <>\n      <NavLink to={backLinkHref.current}>Go back</NavLink>\n      <h1>DetailsMovies: {DetailsMovies.title}</h1>\n      {DetailsMovies.poster_path && (\n        <img\n          alt={`${DetailsMovies.title}`}\n          src={`https://image.tmdb.org/t/p/w300${DetailsMovies.poster_path}`}\n        />\n      )}\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n\n      <Suspense fallback={<div>Loading</div>}>\n        <Routes>\n          <Route path=\"cast\" element={<CastMoviePage />} />\n          <Route path=\"reviews\" element={<ReviewsMoviePage />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n","const API_KEY = `47e737aa53e901079b0b9f35c1e0bd68`;\nexport default API_KEY;\n","import API_KEY from './api-key';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    // throw error;\n  }\n}\n\nexport async function getDetailsMovies(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\nexport async function getMovieSearch(movieQuery) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${movieQuery}`\n    );\n    return response.data;\n  } catch (error) {\n    toast.error('Oops! Something went wrong! Please try again!');\n    throw error;\n  }\n}\n\n// export default async function getMovies({\n//   movieId = '',\n//   searchParameter = '',\n//   searchParameterPrimary = '',\n//   movieQuery = '',\n// }) {\n//   try {\n//     const response = await axios.get(\n//       `https://api.themoviedb.org/3/${searchParameterPrimary}movie${movieId}${searchParameter}?api_key=${API_KEY}${movieQuery}`\n//     );\n//     return response.data;\n//   } catch (error) {\n//     toast.error('Oops! Something went wrong! Please try again!');\n//   }\n// }\n"],"names":["CastMoviePage","lazy","ReviewsMoviePage","DetailsMovies","useState","setDetailsMovies","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","loaded","setLoaded","useEffect","getDetailsMovies","response","toast","fetchDetailsMovies","to","current","title","poster_path","alt","src","Suspense","fallback","path","element","getTrendingMovies","axios","API_KEY","data","getMovieCast","getMovieReviews","getMovieSearch","movieQuery"],"sourceRoot":""}